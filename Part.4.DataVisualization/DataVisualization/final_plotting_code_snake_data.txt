## Read in the data
snake_data <- read.csv("SnakeInfo_2022_03_15_REdC.csv", header=TRUE)

## Check to ensure data is as expected
dim(snake_data)
head(snake_data)

## These checks revealed unnecessary columns which we will subset out.
snake_data <- subset(snake_data, select = -c(8:10))

## Make a unique list of all the species_genotype groups (found in column 5 of the original dataframe)
unique_species_genotype <- unique(snake_data[,5])

## print the list
unique_species_genotype

## printing the list revealed groups I wish to exclude from further plotting. I will remove these using subsetting features.
unique_species_genotype <- unique_species_genotype[-c(5, 7)]

## Make an empty matrix with as many rows as items in unique_species_genotype and 4 columns.
map_matrix <- matrix(0, length(unique_species_genotype), 4)

## Populate that matrix using a for-loop to pull in county data, long and lat.
for (i in 1:length(unique_species_genotype))
{
sub_data <- subset(snake_data, snake_data[,5]==unique_species_genotype[i])
map_matrix[i,1] <- unique_species_genotype[i]
map_matrix[i,2] <- sub_data[1,2]
map_matrix[i,3] <- sub_data[1,3]
map_matrix[i,4] <- sub_data[1,4]
}

## Print that matrix
map_matrix

## Use that matrix to make a map in the first column of this row of a subset of each species-genotype group (the first individual found to match each group)
quartz(height=6, width=12)
par(mar=c(5,5,1,1), mfrow=c(1,2))
plot(as.numeric(map_matrix[,4]), as.numeric(map_matrix[,3]), type="n", ylim=c(36, 46), xlim=c(-125, -120), xlab="Longitude (degrees)", ylab="Latitude (degrees)",
cex.lab=1.25, las=1); box(lwd=2)
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col="light gray")
points(as.numeric(map_matrix[1,4]), as.numeric(map_matrix[1,3]), pch=24, bg="#006BAC", cex=2.5, lwd=1.5)   #atratus_EPN
points(as.numeric(map_matrix[2,4]), as.numeric(map_matrix[2,3]), pch=24, bg="#253494", cex=2.5, lwd=1.5)   #atratus_P
points(as.numeric(map_matrix[3,4]), as.numeric(map_matrix[3,3]), pch=24, bg="black", cex=2.5, lwd=1.5)     #atratus_WT
points(as.numeric(map_matrix[4,4]), as.numeric(map_matrix[4,3]), pch=22, bg="#a1dab4", cex=2.5, lwd=1.5)   #couchii_T
points(as.numeric(map_matrix[5,4]), as.numeric(map_matrix[5,3]), pch=21, bg="white", cex=2.5, lwd=1.5)     #elegans_WT
points(as.numeric(map_matrix[6,4]), as.numeric(map_matrix[6,3]), pch=25, bg="#775511", cex=2.5, lwd=1.5)   #sirtalis_+/LVNV
points(as.numeric(map_matrix[7,4]), as.numeric(map_matrix[7,3]), pch=25, bg="#CB0505", cex=2.5, lwd=1.5)   #sirtalis_LVNV
points(as.numeric(map_matrix[8,4]), as.numeric(map_matrix[8,3]), pch=25, bg="#ffffcc", cex=2.5, lwd=1.5)   #sirtalis_V
points(as.numeric(map_matrix[9,4]), as.numeric(map_matrix[9,3]), pch=25, bg="#ba7570", cex=2.5, lwd=1.5)   #sirtalis_V/VA
points(as.numeric(map_matrix[10,4]), as.numeric(map_matrix[10,3]), pch=25, bg="#41b6c4", cex=2.5, lwd=1.5) #sirtalis_VA
points(as.numeric(map_matrix[11,4]), as.numeric(map_matrix[11,3]), pch=25, bg="black", cex=2.5, lwd=1.5)   #sirtalis_WT
legend("topright", legend=c("Species Genotype", "T. elegans +", "T. couchii T", "T. atratus EPN", "T. atratus P", "T. atratus +", "T. sirtalis LVNV", "T.sirtalis VA",
"T. sirtalis V", "T. sirtalis VA/V", "T. sirtalis LVNV/+", "T. sirtalis +"), pch=c(1,21,22,24,24,24,25,25,25,25,25,25), pt.bg=c("light gray", "white", "#a1dab4", "#006BAC", "#253494", "black", "#CB0505", "#41b6c4", "#ffffcc", 
"#ba7570", "#775511", "black"), col=c("light gray", "black", "black", "black", "black", "black", "black", "black", "black", "black", "black", "black"), pt.cex=2, pt.lwd=1.5, box.lwd=1.5)

## Make a PC plot with the same groupings.
plot(snake_data[,6], snake_data[,7], type="n", xlim=c(-3.13, 2.2), ylim=c(-0.5, 1.1), xlab="Principal component 1 (53.7%)", ylab="Principal component 2 (34.1%)", cex.lab=1.25, las=1); box(lwd=2)
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col="light gray")
points(snake_data[snake_data[,5]=="atratus_EPN",6], snake_data[snake_data[,5]=="atratus_EPN",7], pch=24, bg="#2c7fb8", cex=1.5, lwd=1.25)
points(snake_data[snake_data[,5]=="atratus_P",6], snake_data[snake_data[,5]=="atratus_P",7], pch=24, bg="#253494", cex=1.5, lwd=1.25)
points(snake_data[snake_data[,5]=="atratus_WT",6], snake_data[snake_data[,5]=="atratus_WT",7], pch=24, bg="black", cex=1.5, lwd=1.25)
points(snake_data[snake_data[,5]=="couchii_T",6], snake_data[snake_data[,5]=="couchii_T",7], pch=22, bg="#a1dab4", cex=1.5, lwd=1.25)
points(snake_data[snake_data[,5]=="elegans_WT",6], snake_data[snake_data[,5]=="elegans_WT",7], pch=21, bg="white", cex=1.5, lwd=1.25)
points(snake_data[snake_data[,5]=="sirtalis_+/LVNV",6], snake_data[snake_data[,5]=="sirtalis_+/LVNV",7], pch=21, bg="#775511", cex=1.5, lwd=1.25)
points(snake_data[snake_data[,5]=="sirtalis_LVNV",6], snake_data[snake_data[,5]=="sirtalis_LVNV",7], pch=25, bg="#CB0505", cex=1.5, lwd=1.25)
points(snake_data[snake_data[,5]=="sirtalis_V",6], snake_data[snake_data[,5]=="sirtalis_V",7], pch=25, bg="#ffffcc", cex=1.5, lwd=1.25)
points(snake_data[snake_data[,5]=="sirtalis_V/VA",6], snake_data[snake_data[,5]=="sirtalis_V/VA",7], pch=25, bg="#ba7570", cex=1.5, lwd=1.25)
points(snake_data[snake_data[,5]=="sirtalis_VA",6], snake_data[snake_data[,5]=="sirtalis_VA",7], pch=25, bg="#41b6c4", cex=1.5, lwd=1.25)
points(snake_data[snake_data[,5]=="sirtalis_WT",6], snake_data[snake_data[,5]=="sirtalis_WT",7], pch=25, bg="black", cex=1.5, lwd=1.25)


## make a Fireworks plot out of the PC plot
firework_colors <- c("#006BAC", "#253494", "black", "#a1dab4", "white", "#775511", "#CB0505", "#ffffcc", "#ba7570", "#41b6c4", "black")
firework_pchs <- c(24,24,24,22,21,25,25,25,25,25,25)
plot(snake_data[,6], snake_data[,7], type="n", xlim=c(-4.5, 2.5), ylim=c(-0.5, 1.1), xlab="Principal component 1 (53.7%)", ylab="Principal component 2 (34.1%)", cex.lab=1.25, las=1); box(lwd=2)
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col="light gray")
mean_long_vect <- vector()
mean_lat_vect <- vector()
for (i in 1:length(unique_species_genotype))
        {
        sub_pca <- subset(snake_data, snake_data[,5]==unique_species_genotype[i])
        mean_long_vect[i] <- mean(as.numeric(sub_pca[,6]))
        mean_lat_vect[i] <- mean(as.numeric(sub_pca[,7]))
        for (j in 1:dim(sub_pca)[1])
                {
                segments(mean_long_vect[i], mean_lat_vect[i], sub_pca[,6], sub_pca[,7], lwd=2, col=firework_colors[i])
                }
        }
for (i in 1: length(unique_species_genotype))
        {
        points(mean_long_vect[i], mean_lat_vect[i], pch=firework_pchs[i], bg=firework_colors[i], cex=2.5, lwd=1.5)
        }
